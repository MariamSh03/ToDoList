@model IEnumerable<TodoListApp.WebApi.Models.TaskModel>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function () {
        // Event listener for the Details button click
        $('.detailsButton').click(function (e) {
            e.preventDefault();
            $('.task-details-container').toggle();
        });
    });

    $('.mySelect').change(function () {
        var taskId = $(this).data('taskid');
        var newStatus = $(this).val();
        updateTaskStatus(taskId, newStatus);
    });

    // Function to update task status via AJAX
    function updateTaskStatus(taskId, newStatus) {
        $.ajax({
            url: '/Home/UpdateTaskStatus',
            type: 'POST',
            data: {
                taskId: taskId,
                newStatus: newStatus
            },
            success: function (data) {
                // Refresh the page or update UI as needed
                location.reload(); // Example: Reload the page to reflect changes
            },
            error: function (xhr, status, error) {
                // Handle errors
                console.error(error);
            }
        });
    }
</script>




<head>
    <link rel="stylesheet" href="~/css/Task.css" />
</head>

<div class="Task-container-big">
    @foreach (var task in Model)
    {
        <div class="Task-container" style="@(task.Status.Equals(TodoListApp.WebApi.Models.TaskStatus.Completed) ?
                        "background-color: 4CCD99;" : (task.Status.Equals(TodoListApp.WebApi.Models.TaskStatus.InProgress) ?
                            "background-color: FFF455;" :  ((task.DueDate < DateTime.Today) ? "Background-color: F2613F;" : "Background-color: White;")))">
            @if (task.DueDate < DateTime.Today)
            {
                <div class="overdue-tag">Overdue</div>
            }
            <div class="title">@task.Title</div>
            <div class="due"> Due: @task.DueDate.ToString("HH:mm")</div>
            <div class="actions">
                <form method="post" action="@Url.Action("DeleteTask", "Home")">
                    <input type="hidden" name="taskId" value="@task.Id" />
                    <button class="delete" type="submit">Delete</button>
                </form>

                <button class="editTaskButton" type="button" data-taskId="@task.Id">Edit</button>

                <form method="post" action="@Url.Action("TodoLists", "Home")">
                    <button class="detailsButton" type="submit">Details</button>
                </form>
            </div>
       
            <div class="select">
                <select class="mySelect" data-taskId="@task.Id">
                    @if (task.Status.Equals(TodoListApp.WebApi.Models.TaskStatus.InProgress))
                    {
                        <option value="option1" selected>In progress</option>
                        <option value="option2">Not started</option>
                        <option value="option3">Completed</option>
                    }
                    else if (task.Status.Equals(TodoListApp.WebApi.Models.TaskStatus.NotStarted))
                    {
                        <option value="option1">In progress</option>
                        <option value="option2" selected>Not started</option>
                        <option value="option3">Completed</option>
                    }
                    else if (task.Status.Equals(TodoListApp.WebApi.Models.TaskStatus.Completed))
                    {
                        <option value="option1">In progress</option>
                        <option value="option2">Not started</option>
                        <option value="option3" selected>Completed</option>
                    }
                </select>
            </div>
        </div>

        <div class="task-edit-container">
            @using (Html.BeginForm("EditTask", "Home", FormMethod.Post))
            {
                @Html.Hidden("Id", task.Id)
                <div class="edit-task-container">
                    <div class="form-group">
                        <label>Title:</label>
                        <input name="Title" class="form-control" value="@task.Title" required />
                        <span class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label>Description:</label>
                        <input name="Description" class="form-control" value="@task.Description" required />
                        <span class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label>Due data:</label>
                        <input name="Due" class="form-control" value="@task.DueDate" required />
                        <span class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label>Tags:</label>
                        <input name="Tags" class="form-control" value="@task.Tags" required />
                        <span class="text-danger"></span>
                    </div>
                    <div class="editTaskButton">
                        <button type="submit" class="btn btn-primary">Update Task</button>
                    </div>
                </div>
            }
        </div>

        <div class="task-details-container" style=" display: none;">
            <dic class="head"> Task Details: </dic>
            <div>Title: @task.Title</div>
            <div>Description: @task.Description</div>
            <div>Due: @task.DueDate</div>
            <div>Cretion data:  @task.CreationDate</div>
            <div>Status: @task.Status</div>
            <div>Tags: @task.Tags</div>
        </div>
    }
</div>