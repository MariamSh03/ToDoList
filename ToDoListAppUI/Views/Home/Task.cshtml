@model IEnumerable<TodoListApp.WebApi.Models.TaskModel>

<head>
    <link rel="stylesheet" href="~/css/Task.css" />
</head>

<div class="Task-container-big">
    @foreach (var task in Model)
    {
        <div class="Task-container" style="@(task.Status.Equals(TodoListApp.WebApi.Models.TaskStatus.Completed) ?
                        "background-color: 4CCD99;" : (task.Status.Equals(TodoListApp.WebApi.Models.TaskStatus.InProgress) ?
                            "background-color: FFF455;" :  ((task.DueDate < DateTime.Today) ? "Background-color: F2613F;" : "Background-color: White;")))">

            <div class="title"> <span>@task.Title</span> </div>
            <div class="due"> Due: @task.DueDate.ToString("HH:mm")</div>
            <div class="actions">
                <form method="post" action="@Url.Action("DeleteTask", "Home")">
                    <input type="hidden" name="taskId" value="@task.Id" />
                    <button class="delete" type="submit">Delete</button>
                </form>

                <button class="editTaskButton" type="button" data-edit-container-id="edit-id-@task.Id">Edit</button>

                <form method="post" action="@Url.Action("TodoLists", "Home")">
                    <button class="detailsButton" type="button" data-details-container-id="details-id-@task.Id">Details</button>
                </form>

                <button class="CommentsButton" type="button" data-taskId="@task.Id" >Comments</button>
            </div>

            <div class="select-container">
                <select class="mySelect" tabindex="1" data-taskId="@task.Id" onchange="updateTaskStatus('@task.Id', this.value)">
                    @if (task.Status.Equals(TodoListApp.WebApi.Models.TaskStatus.InProgress))
                    {
                        <option value="InProgress" selected><span>In progress</span></option>
                        <option value="NotStarted"><span>Not started</span></option>
                        <option value="Completed"><span>Completed</span></option>
                    }
                    else if (task.Status.Equals(TodoListApp.WebApi.Models.TaskStatus.NotStarted))
                    {
                        <option value="InProgress"><span>In progress</span></option>
                        <option value="NotStarted" selected><span>Not started</span></option>
                        <option value="Completed"><span>Completed</span></option>
                    }
                    else if (task.Status.Equals(TodoListApp.WebApi.Models.TaskStatus.Completed))
                    {
                        <option value="InProgress"><span>In progress</span></option>
                        <option value="NotStarted"><span>Not started</span></option>
                        <option value="Completed" selected><span>Completed</span></option>
                    }
                </select>
            </div>
        </div>

        @if (task.DueDate < DateTime.Today)
        {
            <div class="overdue-tag">Overdue</div>
        }

        <div class="task-edit-container" id="edit-id-@task.Id" style="display: none;">
            @using (Html.BeginForm("EditTask", "Home", FormMethod.Post))
            {
                @Html.Hidden("Id", task.Id)

                <div class="edit-task-container">
                    <div class="form-group">
                        <label>Title:</label>
                        <input name="Title" class="form-control" value="@task.Title" required />
                        <span class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label>Description:</label>
                        <input name="Description" class="form-control" value="@task.Description" required />
                        <span class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label>Due Date:</label>
                        <input name="DueDate" class="form-control" value="@task.DueDate" required />
                        <span class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label>Tags:</label>
                        <input name="Tags" class="form-control" value="@task.Tags" required />
                        <span class="text-danger"></span>
                    </div>

                    <div class="editTaskButton">
                        <button type="submit" class="btn btn-primary">Update Task</button>
                    </div>
                </div>
            }
        </div>


        <div class="task-details-container" id="details-id-@task.Id" style="display: none;">
            <dic class="head"> Task Details: </dic>
            <div>Title: @task.Title</div>
            <div>Description: @task.Description</div>
            <div>Due: @task.DueDate</div>
            <div>Cretion data:  @task.CreationDate</div>
            <div>Status: @task.Status</div>
            <div>Tags: @task.Tags</div>
        </div>
    }
</div>